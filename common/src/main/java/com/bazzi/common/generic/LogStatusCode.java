package com.bazzi.common.generic;

public enum LogStatusCode {
    CODE_000("000", "成功"),

    // 客户端需要处理的情况
    CODE_001("001", "登录无效，请重新登录"),
    CODE_002("002", "请求参数有误，请检查"),
    CODE_003("003", "系统异常，请稍后再试"),
    CODE_004("004", "访问ip不合法！"),
    CODE_005("005", "不支持的请求方式！"),
    CODE_006("006", "异常的响应状态: %s"),
    CODE_007("007", "JSON序列化异常"),
    CODE_008("008", "该接口不支持`%s`方式请求"),

    CODE_101("101", "菜单url对应的菜单已存在"),
    CODE_102("102", "菜单ID对应的菜单不存在"),
    CODE_103("103", "用户名或密码不正确"),
    CODE_104("104", "用户状态异常"),
    CODE_105("105", "用户名已存在"),
    CODE_106("106", "用户ID对应的用户不存在"),
    CODE_107("107", "记录修改失败，请稍后再试"),
    CODE_108("108", "已存在相同名称的项目"),
    CODE_109("109", "项目ID对应的项目不存在"),
    CODE_110("110", "用户组ID对应的用户组不存在"),
    CODE_112("112", "用户组修改失败，请稍后再试"),
    CODE_113("113", "组状态修改失败，请稍后再试"),
    CODE_114("114", "添加用户组成员失败，请稍后再试"),
    CODE_115("115", "用户组名称已存在"),
    CODE_116("116", "用户组中存在无微信号的用户"),
    CODE_117("117", "报警配置名称已存在"),
    CODE_118("118", "报警配置ID对应的报警配置不存在"),
    CODE_119("119", "报警配置修改失败，请稍后再试"),
    CODE_120("120", "该用户组下已存在ID(%s)的用户"),
    CODE_121("121", "监控策略已存在"),
    CODE_122("122", "监控策略ID对应策略不存在"),
    CODE_123("123", "监控策略正在使用该报警配置，无法删除"),
    CODE_124("124", "该项目下有监控策略配置，无法删除"),
    CODE_125("125", "已存在相同日志文件名的项目"),
    CODE_126("126", "密码长度必须为6-20字符"),
    CODE_127("127", "监控策略内容不能为空"),
    CODE_128("128", "字符串数组元素个数必须在2到6之间"),
    CODE_129("129", "字符串数组元素不能为空"),


    CODE_300("300", "未知异常"),
    CODE_301("301", "ID为：%s 的项目不存在"),
    CODE_302("302", "ID为：%s 的项目状态无效"),
    CODE_303("303", "ID为：%s 的监控策略不存在"),
    CODE_304("304", "ID为：%s 的监控策略状态无效"),
    CODE_305("305", "ID为：%s 的报警配置不存在"),
    CODE_306("306", "ID为：%s 的报警配置状态无效"),
    CODE_307("307", "ID为：%s 的报警用户组不存在"),
    CODE_308("308", "ID为：%s 的报警用户组状态无效"),
    CODE_309("309", "ID为：%s 的报警用户组下不存在状态正常的用户"),

    ;

    private String code;
    private String message;

    LogStatusCode(String code, String message) {
        this.code = code;
        this.message = message;
    }

    public String getCode() {
        return code;
    }

    public String getMessage() {
        return message;
    }
}
